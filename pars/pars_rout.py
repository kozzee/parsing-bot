from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from pars.api_hh import extract_vacancies, get_number_of_vacation
from keyboard.start_kb import one_key_kb
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State

pars_router = Router()

@pars_router.message(F.text == 'üîç –ü–∞—Ä—Å–∏–Ω–≥')
async def pars(message : Message):
    await message.answer('–ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏!')
    await message.answer('üîé')

    number_vac = get_number_of_vacation()
    await message.answer(f'–ù–∞–π–¥–µ–Ω–æ {number_vac} –≤–∞–∫–∞–Ω—Å–∏–π. –ü–æ–∫–∞–∑–∞—Ç—å —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã?', reply_markup=one_key_kb('–ü–æ–∫–∞–∂–∏'))

@pars_router.message(F.text == '–ü–æ–∫–∞–∂–∏')
async def vacant_show(message: Message):
    vacancies = extract_vacancies(page= )
    for i in vacancies:
        answer = f"{i['title']}\n{i['employer']}\n{i['description']}\n{i['link']}"
        await message.answer(answer, reply_markup=one_key_kb('–ü–æ–∫–∞–∂–∏ –µ—â–µ'))

@pars_router.message(F.text == "–ü–æ–∫–∞–∂–∏ –µ—â–µ")
async def next_page(message: Message):
    await vacant_show(message)

    
